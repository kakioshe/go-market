<% content_for :title, "Product - " %>
<% content_for :head do %>
<!-- CamanJs -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/camanjs/4.1.2/caman.full.min.js"></script>
<% end %>
<style>
/* Always set the map height explicitly to define the size of the div
* element that contains the map. */
#map {
 height: 50vh;
}
</style>
<div class="error-text">
</div>

<div id="small-page">

  <p style="margin-top:5%;"> </p>
  <% pic = [] %>
  <div class="row">
    <div class="col-sm-4">
      <div class="pd-div-image">
        <% for picture in @product.pictures %>
          <% pic << picture %>
        <% end %>

        <% if pic === [] %>
          <%= image_tag( "products/p-camera.png", id: 'pd-clicked-image', class: 'pd-clicked-image') %>
        <% else %>
          <%= image_tag( @product.pictures[0].image.url, id: 'pd-clicked-image', class: 'pd-clicked-image') %>
        <% end %>

      </div>

      <div class="row" style="padding: 5%">
        <% for picture in @product.pictures %>
      		<div class="col-4 pd-image-small" id="pd-div-image-small">
            <%= link_to image_tag(picture.image.url, id: 'pd-image') %>
          </div>
      	<% end %>
      </div>
      <% picture = @product.pictures[0] %>
      <% unless picture.nil? %>
      <p style="font-weight:700">Do more with the image!</p>
      Contrast<br/>
      <input type="range" name="contrast" class="custom-range" min="-100" max="100" id="contrast" value="0">
      Brightness<br/>
      <input id="bright" name="bright" class="custom-range" type="range" min="-100" max="100" value="0">
      Saturation<br/>
      <input id="satr" name="satr" class="custom-range" type="range" min="-100" max="100" value="0">
      Exposure<br/>
      <input id="expos" name="expos" class="custom-range" type="range" min="-100" max="100" value="0">

      <button id="resetbtn" class="btn btn-for-caman">Reset Photo</button>
      <% end %>
    </div>

    <div class="col-sm-5">
      <% if user_signed_in? and current_user.stores_id==@product.stores_id %>
        <p>
          <div class="row">
            <div class="col-6">
              <%= link_to edit_product_path(@product), {:id => 'p-button-link'} do %>
    						<div class="product-button">
    							<p> Edit Product </p>
    						</div>
    					<% end %>
            </div>
            <div class="col-6">
              <% if @product.active == true %>
                <div class="de-ac">
                  <%= link_to controller: "products", action: "deactivate", id: @product do %>
                  <div class="product-button">
      							<p> Deactivate </p>
      						</div>
                  <% end %>
                </div>
              <% else %>
                <div class="de-ac">
                  <%= link_to controller: "products", action: "activate", id: @product do %>
                  <div class="product-button">
      							<p> Activate </p>
      						</div>
                  <% end %>
                </div>
              <% end %>
            </div>
          </div>
        </p>
      <% end %>

      <p id="page-title"><%= @product.title %></p>
      <p>
        <%= @product.description %>
      </p>

      <div id="map"></div>
    </div>


    <% unless user_signed_in? and current_user.stores_id==@product.stores_id %>
      <div class="col-sm-3">
        <%= form_for @order_item, remote: true do |f| %>
        <div id="pd-div-price">
          <div class="pd-price-txt">$ <%= @product.price %></div>
          Quantity: <%= f.number_field :quantity, value: 1, class: "form-control quantity-form", min: 1 %>
          <%= f.hidden_field :product_id, value: @product.id %>
          <%= f.hidden_field :order_status_id, value: 1 %>
        </div>

        <div id="pd-div-addtocart">
            <% if user_signed_in? %>
              <%= f.submit "ADD TO CART", class: 'btn btn-outline-primary cart-button'%>
            <% else %>
              <a href="/users/sign_up"><input name="commit" value="REGISTER TO BUY" class="btn btn-outline-primary cart-button" data-disable-with="REGISTER"></a>
            <% end %>
          <% end %>
        </div>

        <div id="pd-div-seller">
          seller information
        </div>

        <%= link_to store_path(@product.stores_id), id: 'seller-info-button' do %>
        <div id="pd-div-sellerinfo">
          <% if @store.avatar? %>
              <%= image_tag(@store.avatar.url, :class => "profile-picture") %>
            <% else %>
          <%= image_tag( "products/p-camera.png", id: 'seller-card-picture', alt: 'store picture', style: "display: inline;", class: "img-frame") %>
          <% end %>

          <div id="store-information">
            <p id="store-name"><%= @store.name.upcase %></p>
            <p id="store-description"><%= @store.description %></p>
            <br/>
          </div>
        </div>
        <% end %>
      </div>
    <% end %>
  </div>
</div>

<script>
// This example adds a search box to a map, using the Google Place Autocomplete
// feature. People can enter geographical searches. The search box will return a
// pick list containing a mix of places and predicted search terms.

// This example requires the Places library. Include the libraries=places
// parameter when you first load the API. For example:
// <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

function initAutocomplete() {
  var geoloc = '<%= @product.maps %>'
  var geoloc = geoloc.split(",");
  if (isNaN(parseFloat(geoloc[0]))) {
    var currentloc = {lat: -25.274398, lng: 133.77513599999997};
    var zoomnumber = 5;
  }
  else {
    var currentloc = {lat: parseFloat(geoloc[0]), lng: parseFloat(geoloc[1])};
    var zoomnumber = 16;
  }
  var map = new google.maps.Map(document.getElementById('map'), {
    center: currentloc,
    zoom: zoomnumber,
    mapTypeId: 'roadmap'
  });

  if (currentloc['lat'] != -25.274398 && currentloc['lng'] != 133.77513599999997){
    var marker = new google.maps.Marker({
      position: currentloc,
      map: map,
      label: 'Product location'
    });
  }

}
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV["MAPS_API"] %>&callback=initAutocomplete&libraries=places" async defer></script>
